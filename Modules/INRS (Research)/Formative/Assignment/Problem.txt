1. Watch out for security
-------------------------
Security can be a real concern when business users start building apps or automating workflows without any oversight or access protocols. 

Although no and low code platforms can help avoid "shadow IT" – you know, when business peeps do their own software thing – they can end up creating their own version of it.

To avoid any security snafus, a good no or low-code platform should have built-in governance and security measures. 

It should put some limits on what business users can do to keep things safe. And IT should keep an eye on what's happening to stay in the loop
______________________________________________________________________________________________________________________________________________________________________________________________
Technology type - LCNC (Low Code No Code)
Group target - Young IT professionals in Gauteng
variable A - security effects
variable B - sensitive IT data systems
______________________________________________________________________________________________________________________________________________________________________________________________

Problem statement Final (3rd statement)
---------------------------------------
The aim of this research is to provide young IT developers in Gauteng that are new to the IT software production industry with better knowledge on the cyber security risks when using LCNC (Low Code No Code) applications in respective comparison to traditional hand coding when developing sensitive IT Application for organizations. (last sentence) By providing this information the research aims to find the security effectivness when using LCNC applications compared to using traditional coding standards in application development in reltionship to the security effetivness of both development methodologies.
__________________________________________________________________________________________________________________________________________

Hypothesis 
----------
HA1 = when using LCDS (Low-Code-Development-Software) the prodctivity is much greater then using traditional hand coding practices as the time taken to finish an application takes less time taken.

HA2 = when using traditional hand coding practices the chances of security vulnerabilities are much less then using LCDS (Low-Code-Development-Software).
__________________________________________________________________________________________________________________________________________

Hypotheses
----------
1. 

Theory
------
Use of the Agile Development Theory (Using Stages/Phases) both hand coding and LCNC use this
__________________________________________________________________________________________________________________________________________
Objectives
----------
1. Benefits of using LCNC in software development 
2. Downfalls of using LCNC in software development 
3. Cyber Security risks mitigation in software development
______________________________________________________________________________________________________________________________________________________________________________________________
Topic related Concept examples (2) :

1 - IT software production industry using LCNC (Low Code No Code) as a production line
2 - LCNC (Low Code No Code) algorithms security practices used
3 - Coding Methodologies preferable during specific practices such as authorization and authentication
4 - Cyber Security risks when young IT software developers in gauteng use LCNC algorithms in developing applications


