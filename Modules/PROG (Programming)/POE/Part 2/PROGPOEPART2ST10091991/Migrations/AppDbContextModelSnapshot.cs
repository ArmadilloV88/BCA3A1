// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROGPOEPART2ST10091991.Data;

#nullable disable

namespace PROGPOEPART2ST10091991.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("UserID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.EmployeeProduct", b =>
                {
                    b.Property<int>("EmployeeProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeProductID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeProductID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductID");

                    b.ToTable("EmployeeProducts");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Farmer", b =>
                {
                    b.Property<int>("FarmerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmerID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FarmerID");

                    b.HasIndex("UserID");

                    b.ToTable("Farmers");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Favorite", b =>
                {
                    b.Property<int>("FavoriteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("FarmerID")
                        .HasColumnType("int");

                    b.HasKey("FavoriteID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("FarmerID");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.NewsFeed", b =>
                {
                    b.Property<int>("NewsFeedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsFeedID"));

                    b.Property<DateTime>("NewsFeedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NewsFeedDateExp")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsFeedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsFeedID");

                    b.ToTable("NewsFeed", (string)null);
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("FarmerID")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProductDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            TagID = 1,
                            Description = "Employee"
                        },
                        new
                        {
                            TagID = 2,
                            Description = "Farmer"
                        });
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("TagID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Employee", b =>
                {
                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.EmployeeProduct", b =>
                {
                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.User", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Farmer", b =>
                {
                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Favorite", b =>
                {
                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.User", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.User", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.User", b =>
                {
                    b.HasOne("PROGPOEPART2ST10091991.Models.ERD.Tag", "Tag")
                        .WithMany("Users")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("PROGPOEPART2ST10091991.Models.ERD.Tag", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
